import Head from 'next/head';
import React from 'react';
import styles from '../styles/Transitions.module.css';
import { Button, Center, Container, FileInput, Group, Input, NativeSelect, Space, Text, TextInput, Title } from '@mantine/core';
import { IconAt, IconCurrencyDollar, IconUpload } from '@tabler/icons-react';
import { useForm, yupResolver } from '@mantine/form';
import * as Yup from "yup";
import { toast } from 'react-hot-toast';
import { deployGrant } from '@/lib/deployGrant';
import { upload } from '@/lib/uploadImage';
import Layout from '@/components/Layout/Layout';

const template = <span><a href={"https://solanafoundation.notion.site/Solana-Foundation-Developer-Tooling-Grant-Application-Requirements-83fe675409614604991ec857e8d5a348"} target="_blank"
    rel="noopener noreferrer">template</a></span>;

const schema = Yup.object().shape({
    name: Yup.string()
        .required("Project name is required.")
        .label("Name")
        .min(4, "Name should have at least 4 letters")
        .max(50, "Name can not be longer than 50 characters"),
    oneLiner: Yup.string().required("One line description is required.").label("One Liner").max(50),
    firstName: Yup.string().required("First name is required.").label("First Name"),
    lastName: Yup.string().required("Last name is required.").label("Last Name"),
    email: Yup.string().required("Email address is required.").email().label("Email"),
    twitter: Yup.string().label("Twitter"),
    country: Yup.string().required("Please enter a country").label("Country"),
    website: Yup.string().url().required("Website link is required.").label("Website"),
    image: Yup.string().url()/*.required("Image is required.")*/.label("Image"),
    repo: Yup.string().url().required("A GitHub repo is required.").label("Repo"),
    proposal: Yup.string().url().required("Proposal link is required.").label("Proposal Link"),
    fundingAmount: Yup.number()
        .required("Funding amount is required.")
        .label("Funding Amount")
        .min(1, "Funding amount must be above $100."),
});

export default function Create() {
    const form = useForm({
        validate: yupResolver(schema),
        validateInputOnBlur: true,
        initialValues: {
            name: "",
            oneLiner: "",
            firstName: "",
            lastName: "",
            website: "",
            image: "",
            country: "",
            email: "",
            twitter: "",
            repo: "",
            pool: "Solana Foundation Dev-Tools Round",
            proposal: "",
            fundingAmount: 0,
            approved: false,
        }
    })

    return (
        <>
            <Head>
                <title>Stockpile Grants</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Layout>
                <main>
                    <section>
                        <Center mt={25}>
                            <div className={styles.fadeInUp}>
                                <Title
                                    size={56}
                                    weight={900}
                                    sx={{
                                        "@media (max-width: 925px)": {
                                            textAlign: "center",
                                            fontSize: 42,
                                        },
                                        "@media (max-width: 520px)": {
                                            textAlign: "center",
                                            fontSize: 36,
                                        },
                                    }}
                                >
                                    Create a{" "}
                                    <Text
                                        component="span"
                                        size={56}
                                        weight={900}
                                        variant="gradient"
                                        gradient={{ from: "orange", to: "red" }}
                                        inherit
                                        sx={{
                                            "@media (max-width: 925px)": {
                                                textAlign: "center",
                                                fontSize: 42,
                                            },
                                            "@media (max-width: 520px)": {
                                                textAlign: "center",
                                                fontSize: 36,
                                            },
                                        }}
                                    >
                                        Grant
                                    </Text>
                                    .
                                </Title>
                            </div>
                        </Center>
                        <Center mt="md">
                            <div className={styles.fadeInUp}>
                                <Text
                                    size="lg"
                                    color="dimmed"
                                    sx={(theme) => ({
                                        textAlign: "center",

                                        "@media (max-width: 925px)": {
                                            textAlign: "center",
                                            fontSize: 14,
                                        },

                                        "@media (max-width: 520px)": {
                                            textAlign: "center",
                                            fontSize: 10,
                                        },
                                    })}
                                >
                                    Quick, easy and open grant applications, powered by Quadratic Funding.
                                </Text>
                            </div>
                        </Center>
                    </section>
                    <section>
                        <div className={styles.fadeInUp}>
                            <Container my={75}>
                                <form onSubmit={form.onSubmit(async () => {
                                    alert(JSON.stringify(form.values));
                                    await toast.promise(
                                        deployGrant(form.values), {
                                        loading: "Loading...",
                                        success: () => `Wahooo! Your Grant has been posted, and is pending review.`,
                                        error: (err) => `${err}`,
                                    });
                                    form.reset();
                                })}>
                                    <Group grow spacing="md" mb="md">
                                        <TextInput label="Project Name" placeholder="Enter your project name..." radius="md" {...form.getInputProps("name")} withAsterisk />
                                        <TextInput label="One Liner" placeholder="Enter a one line description..." radius="md" {...form.getInputProps("oneLiner")} withAsterisk />
                                    </Group>
                                    <Group grow spacing="md" mb="md">
                                        <TextInput label="First Name" placeholder="Enter your first name..." radius="md" {...form.getInputProps("firstName")} withAsterisk />
                                        <TextInput label="Last Name" placeholder="Enter your last name..." radius="md" {...form.getInputProps("lastName")} withAsterisk />
                                    </Group>
                                    <Group grow spacing="md" mb="md">
                                        <TextInput label="Website" placeholder="Enter your project's website..." radius="md" {...form.getInputProps("website")} withAsterisk />
                                        <TextInput label="Country" placeholder="Enter your home country..." radius="md" {...form.getInputProps("country")} withAsterisk />
                                    </Group>
                                    <Group grow spacing="md" mb="md">
                                        <TextInput label="Email Address" placeholder="Enter an email address..." radius="md" {...form.getInputProps("email")} withAsterisk />
                                        <TextInput label="Twitter" placeholder="Enter a Twitter handle..." icon={<IconAt size="0.8rem" />} {...form.getInputProps("twitter")} radius="md" />
                                    </Group>
                                    <Group grow spacing="md" mb="md">
                                        <TextInput label="GitHub Repository" description="Please link your project's working repository" placeholder="Enter a GitHub repo..." radius="md" {...form.getInputProps("repo")} withAsterisk />
                                        <NativeSelect
                                            data={['Solana Foundation Dev-Tools Round']}
                                            label="Select Round"
                                            description="Choose which grant round to participate in"
                                            {...form.getInputProps("pool")}
                                            withAsterisk
                                        />
                                    </Group>
                                    <Input.Label required>Proposal Document Link</Input.Label>
                                    <Input.Description mb={5}>We ask that you write your proposal in a Google Doc/Notion. Please see this {template} above to create a proposal in the required format</Input.Description>
                                    <TextInput
                                        placeholder="Enter a Google Doc or Notion link..."
                                        radius="md"
                                        {...form.getInputProps("proposal")}
                                    />
                                    <Space h="md" />
                                    <TextInput
                                        label="Funding Amount"
                                        description="How much funding are you looking for? (The average funding size is about ~$40,000 USD)"
                                        placeholder="Enter a funding goal..."
                                        radius="md"
                                        type="number"
                                        icon={<IconCurrencyDollar size="0.8rem" />}
                                        {...form.getInputProps("fundingAmount")}
                                        withAsterisk
                                    />
                                    <Space h="md" />
                                    <FileInput
                                        label="Image"
                                        accept="image/png,image/jpeg"
                                        icon={<IconUpload size="0.8rem" />}
                                        onChange={async (file) => {
                                            if (file != null) {
                                                let url = await upload(file);
                                                form.setFieldValue("image", url as any);
                                            }
                                        }}
                                        clearable
                                        withAsterisk
                                    />
                                    <Space h="xl" />
                                    <Center>
                                        <Button
                                            variant="gradient"
                                            gradient={{ from: "orange", to: "red" }}
                                            radius="lg"
                                            size="lg"
                                            type="submit"
                                        >
                                            Submit
                                        </Button>
                                    </Center>
                                </form>
                            </Container>
                        </div>
                    </section>
                </main>
            </Layout>
        </>
    );
}